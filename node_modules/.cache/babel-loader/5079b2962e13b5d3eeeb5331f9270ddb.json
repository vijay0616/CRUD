{"ast":null,"code":"import { ApiMethods, callApi } from \"../../../utils/api\";\nimport { all, call, fork, put, takeEvery } from \"typed-redux-saga\";\nimport { formFailed } from \"./actions\";\nimport { API_ROUTES } from \"../../../config/api_routes\";\nimport { FormActionTypes } from \"./types\";\nexport function* formHandler(action) {\n  try {\n    const formValues = action.payload;\n    const response = yield* call(callApi, ApiMethods.POST.toString(), API_ROUTES.POST_FORM_DATA, formValues);\n\n    if (response.error) {\n      yield put(dashboardSuccess(response));\n    } else {\n      yield put(dashboardFailed(response.error));\n    }\n  } catch (e) {\n    if (e instanceof Error && e.stack) yield put(formFailed(e.stack));else yield put(formFailed(\"unknown error.\"));\n  }\n}\n\nfunction* watchFormHandler() {\n  yield takeEvery(FormActionTypes.FORM_REQUEST, formHandler);\n}\n\nfunction* formSaga() {\n  yield all([fork(watchFormHandler)]);\n}\n\nexport default formSaga;","map":{"version":3,"names":["ApiMethods","callApi","all","call","fork","put","takeEvery","formFailed","API_ROUTES","FormActionTypes","formHandler","action","formValues","payload","response","POST","toString","POST_FORM_DATA","error","dashboardSuccess","dashboardFailed","e","Error","stack","watchFormHandler","FORM_REQUEST","formSaga"],"sources":["/home/ansio-user/vijaypro/web/src/pages/Form/store/sagas.ts"],"sourcesContent":["import { ApiMethods, callApi } from \"../../../utils/api\";\r\nimport { all, call, fork, put, takeEvery } from \"typed-redux-saga\";\r\nimport { formData, formRequest, formSuccess, formFailed } from \"./actions\";\r\n\r\nimport { API_ROUTES } from \"../../../config/api_routes\";\r\nimport { FormActionTypes } from \"./types\";\r\n\r\nexport function* formHandler(action: ReturnType<typeof formRequest>): any {\r\n  try {\r\n    const formValues = action.payload;\r\n    const response = yield* call(\r\n      callApi,\r\n      ApiMethods.POST.toString(),\r\n      API_ROUTES.POST_FORM_DATA,\r\n      formValues\r\n    );\r\n\r\n    if (response.error) {\r\n      yield put(dashboardSuccess(response));\r\n      \r\n    } else {\r\n      yield put(dashboardFailed(response.error));\r\n    }\r\n  } catch (e) {\r\n    if (e instanceof Error && e.stack) yield put(formFailed(e.stack));\r\n    else yield put(formFailed(\"unknown error.\"));\r\n  }\r\n}\r\n\r\nfunction* watchFormHandler() {\r\n  yield takeEvery(FormActionTypes.FORM_REQUEST, formHandler);\r\n}\r\n\r\nfunction* formSaga(): any {\r\n  yield all([fork(watchFormHandler)]);\r\n}\r\n\r\nexport default formSaga;\r\n"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,OAArB,QAAoC,oBAApC;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,SAA/B,QAAgD,kBAAhD;AACA,SAA6CC,UAA7C,QAA+D,WAA/D;AAEA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SAASC,eAAT,QAAgC,SAAhC;AAEA,OAAO,UAAUC,WAAV,CAAsBC,MAAtB,EAAmE;EACxE,IAAI;IACF,MAAMC,UAAU,GAAGD,MAAM,CAACE,OAA1B;IACA,MAAMC,QAAQ,GAAG,OAAOX,IAAI,CAC1BF,OAD0B,EAE1BD,UAAU,CAACe,IAAX,CAAgBC,QAAhB,EAF0B,EAG1BR,UAAU,CAACS,cAHe,EAI1BL,UAJ0B,CAA5B;;IAOA,IAAIE,QAAQ,CAACI,KAAb,EAAoB;MAClB,MAAMb,GAAG,CAACc,gBAAgB,CAACL,QAAD,CAAjB,CAAT;IAED,CAHD,MAGO;MACL,MAAMT,GAAG,CAACe,eAAe,CAACN,QAAQ,CAACI,KAAV,CAAhB,CAAT;IACD;EACF,CAfD,CAeE,OAAOG,CAAP,EAAU;IACV,IAAIA,CAAC,YAAYC,KAAb,IAAsBD,CAAC,CAACE,KAA5B,EAAmC,MAAMlB,GAAG,CAACE,UAAU,CAACc,CAAC,CAACE,KAAH,CAAX,CAAT,CAAnC,KACK,MAAMlB,GAAG,CAACE,UAAU,CAAC,gBAAD,CAAX,CAAT;EACN;AACF;;AAED,UAAUiB,gBAAV,GAA6B;EAC3B,MAAMlB,SAAS,CAACG,eAAe,CAACgB,YAAjB,EAA+Bf,WAA/B,CAAf;AACD;;AAED,UAAUgB,QAAV,GAA0B;EACxB,MAAMxB,GAAG,CAAC,CAACE,IAAI,CAACoB,gBAAD,CAAL,CAAD,CAAT;AACD;;AAED,eAAeE,QAAf"},"metadata":{},"sourceType":"module"}