{"ast":null,"code":"export let ApiMethods;\n\n(function (ApiMethods) {\n  ApiMethods[\"GET\"] = \"GET\";\n  ApiMethods[\"POST\"] = \"POST\";\n  ApiMethods[\"PUT\"] = \"PUT\";\n})(ApiMethods || (ApiMethods = {}));\n\nexport async function callApi(method, url, data) {\n  var _process$env$REACT_AP;\n\n  const fullApiUrl = `${(_process$env$REACT_AP = process.env.REACT_APP_API_BASE_URL) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : \"http://localhost:3001\"}${url}`;\n  const res = await fetch(fullApiUrl, {\n    method,\n    mode: \"cors\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json charset=UTF-8\"\n    },\n    body: JSON.stringify(data)\n  });\n\n  if (res.status !== 200) {\n    const badResponse = await res.json();\n    return {\n      error: badResponse\n    };\n  }\n\n  return res.json();\n}\nexport async function uploadApi(method, url, data) {\n  var _process$env$REACT_AP2;\n\n  const fullApiUrl = `${(_process$env$REACT_AP2 = process.env.REACT_APP_API_BASE_URL) !== null && _process$env$REACT_AP2 !== void 0 ? _process$env$REACT_AP2 : \"http://localhost:3001\"}${url}`;\n  const response = await fetch(fullApiUrl, {\n    method,\n    mode: \"cors\",\n    body: data\n  });\n\n  if (response.status !== 200) {\n    const badResponse = await response.json();\n    return {\n      result: badResponse\n    };\n  } else {\n    const importResponse = await response.json();\n    return {\n      result: importResponse\n    };\n  }\n}","map":{"version":3,"names":["ApiMethods","callApi","method","url","data","fullApiUrl","process","env","REACT_APP_API_BASE_URL","res","fetch","mode","headers","Accept","body","JSON","stringify","status","badResponse","json","error","uploadApi","response","result","importResponse"],"sources":["/home/ansio-user/vijaypro/web/src/utils/api.ts"],"sourcesContent":["export enum ApiMethods {\r\n  GET = \"GET\",\r\n  POST = \"POST\",\r\n  PUT = \"PUT\",\r\n}\r\n\r\nexport async function callApi(\r\n  method: string,\r\n  url: string,\r\n  data?: any\r\n): Promise<any> {\r\n  const fullApiUrl = `${\r\n    process.env.REACT_APP_API_BASE_URL ?? \"http://localhost:3001\"\r\n  }${url}`;\r\n  const res = await fetch(fullApiUrl, {\r\n    method,\r\n    mode: \"cors\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json charset=UTF-8\",\r\n    },\r\n    body: JSON.stringify(data),\r\n  });\r\n\r\n  if (res.status !== 200) {\r\n    const badResponse = await res.json();\r\n    return { error: badResponse };\r\n  }\r\n  return res.json();\r\n}\r\n\r\nexport async function uploadApi(\r\n  method: string,\r\n  url: string,\r\n  data?: any\r\n): Promise<any> {\r\n  const fullApiUrl = `${\r\n    process.env.REACT_APP_API_BASE_URL ?? \"http://localhost:3001\"\r\n  }${url}`;\r\n  const response = await fetch(fullApiUrl, {\r\n    method,\r\n    mode: \"cors\",\r\n    body: data,\r\n  });\r\n  if (response.status !== 200) {\r\n    const badResponse = await response.json();\r\n    return { result: badResponse };\r\n  } else {\r\n    const importResponse = await response.json();\r\n    return { result: importResponse };\r\n  }\r\n}\r\n"],"mappings":"AAAA,WAAYA,UAAZ;;WAAYA,U;EAAAA,U;EAAAA,U;EAAAA,U;GAAAA,U,KAAAA,U;;AAMZ,OAAO,eAAeC,OAAf,CACLC,MADK,EAELC,GAFK,EAGLC,IAHK,EAIS;EAAA;;EACd,MAAMC,UAAU,GAAI,GAAD,yBACjBC,OAAO,CAACC,GAAR,CAAYC,sBADK,yEACqB,uBACvC,GAAEL,GAAI,EAFP;EAGA,MAAMM,GAAG,GAAG,MAAMC,KAAK,CAACL,UAAD,EAAa;IAClCH,MADkC;IAElCS,IAAI,EAAE,MAF4B;IAGlCC,OAAO,EAAE;MACPC,MAAM,EAAE,kBADD;MAEP,gBAAgB;IAFT,CAHyB;IAOlCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf;EAP4B,CAAb,CAAvB;;EAUA,IAAIK,GAAG,CAACQ,MAAJ,KAAe,GAAnB,EAAwB;IACtB,MAAMC,WAAW,GAAG,MAAMT,GAAG,CAACU,IAAJ,EAA1B;IACA,OAAO;MAAEC,KAAK,EAAEF;IAAT,CAAP;EACD;;EACD,OAAOT,GAAG,CAACU,IAAJ,EAAP;AACD;AAED,OAAO,eAAeE,SAAf,CACLnB,MADK,EAELC,GAFK,EAGLC,IAHK,EAIS;EAAA;;EACd,MAAMC,UAAU,GAAI,GAAD,0BACjBC,OAAO,CAACC,GAAR,CAAYC,sBADK,2EACqB,uBACvC,GAAEL,GAAI,EAFP;EAGA,MAAMmB,QAAQ,GAAG,MAAMZ,KAAK,CAACL,UAAD,EAAa;IACvCH,MADuC;IAEvCS,IAAI,EAAE,MAFiC;IAGvCG,IAAI,EAAEV;EAHiC,CAAb,CAA5B;;EAKA,IAAIkB,QAAQ,CAACL,MAAT,KAAoB,GAAxB,EAA6B;IAC3B,MAAMC,WAAW,GAAG,MAAMI,QAAQ,CAACH,IAAT,EAA1B;IACA,OAAO;MAAEI,MAAM,EAAEL;IAAV,CAAP;EACD,CAHD,MAGO;IACL,MAAMM,cAAc,GAAG,MAAMF,QAAQ,CAACH,IAAT,EAA7B;IACA,OAAO;MAAEI,MAAM,EAAEC;IAAV,CAAP;EACD;AACF"},"metadata":{},"sourceType":"module"}